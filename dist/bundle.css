.b4ckbone {
  --content-max-width: 80rem;
  --edge: 1rem;
  --breakout: 0rem;
  --popout: 0rem;
}
@media (min-width: 768px) {
  .b4ckbone {
    --breakout: max(1rem, 6vw);
    --edge: clamp(1rem, 6vw, 5rem);
  }
}
@media (min-width: 1024px) {
  .b4ckbone {
    --popout: max(1rem, 6vw);
  }
}

.b4ckbone > :not(.full), .b4ckbone .full > * {
  --popout-without-content: var(--popout);
  --breakout-without-content: calc(var(--breakout) + var(--popout));
  --edge-without-content: calc(var(--edge) + var(--breakout) + var(--popout));
  --content-spacing: calc((100% - var(--left-without-content, 0rem) - var(--right-without-content, 0rem) - var(--content-max-width)) / 2);
  --popout-spacing: max(var(--popout-without-content), var(--popout-without-content) + var(--content-spacing));
  --breakout-spacing: max(var(--breakout-without-content), var(--breakout-without-content) + var(--content-spacing));
  --edge-spacing: max(var(--edge-without-content), var(--edge-without-content) + var(--content-spacing));
}
.b4ckbone, .b4ckbone .full {
  display: grid;
  grid-template-columns: [edge-start] var(--edge) [breakout-start] var(--breakout) [popout-start] var(--popout) [content-start] 1fr [content-end] var(--popout) [popout-end] var(--breakout) [breakout-end] var(--edge) [edge-end];
}
.b4ckbone > .content, .b4ckbone .full > .content {
  grid-column: content;
  justify-self: center;
  width: 100%;
  max-width: var(--content-max-width);
}
.b4ckbone > .content-start, .b4ckbone .full > .content-start {
  grid-column-start: content;
  margin-left: max(var(--left-spacing, 0rem), var(--left-spacing, 0rem) + var(--content-spacing));
}
.b4ckbone > .content-end, .b4ckbone .full > .content-end {
  grid-column-end: content;
  margin-right: max(var(--right-spacing, 0rem), var(--right-spacing, 0rem) + var(--content-spacing));
}
.b4ckbone > .popout, .b4ckbone .full > .popout {
  grid-column: popout;
  --left-without-content: var(--popout-without-content);
  --right-without-content: var(--popout-without-content);
  --left-spacing: var(--popout-spacing);
  --right-spacing: var(--popout-spacing);
}
.b4ckbone > .popout-start, .b4ckbone .full > .popout-start {
  grid-column-start: popout;
  --left-without-content: var(--popout-without-content);
  --left-spacing: var(--popout-spacing);
}
.b4ckbone > .popout-end, .b4ckbone .full > .popout-end {
  grid-column-end: popout;
  --right-without-content: var(--popout-without-content);
  --right-spacing: var(--popout-spacing);
}
.b4ckbone > .breakout, .b4ckbone .full > .breakout {
  grid-column: breakout;
  --left-without-content: var(--breakout-without-content);
  --right-without-content: var(--breakout-without-content);
  --left-spacing: var(--breakout-spacing);
  --right-spacing: var(--breakout-spacing);
}
.b4ckbone > .breakout-start, .b4ckbone .full > .breakout-start {
  grid-column-start: breakout;
  --left-without-content: var(--breakout-without-content);
  --left-spacing: var(--breakout-spacing);
}
.b4ckbone > .breakout-end, .b4ckbone .full > .breakout-end {
  grid-column-end: breakout;
  --right-without-content: var(--breakout-without-content);
  --right-spacing: var(--breakout-spacing);
}
.b4ckbone > .edge-start, .b4ckbone .full > .edge-start {
  grid-column-start: edge;
  --left-without-content: var(--edge-without-content);
  --left-spacing: var(--edge-spacing);
}
.b4ckbone > .edge-end, .b4ckbone .full > .edge-end {
  grid-column-end: edge;
  --right-without-content: var(--edge-without-content);
  --right-spacing: var(--edge-spacing);
}
.b4ckbone > :not(.content, .content-start, .content-end, .popout, .popout-start, .popout-end, .breakout, .breakout-start, .breakout-end, .edge-start, .edge-end), .b4ckbone .full {
  grid-column: edge;
}
.b4ckbone.centered > :not(.full), .b4ckbone > .centered:not(.full), .b4ckbone.centered .full > *, .b4ckbone .full.centered > *, .b4ckbone .full > .centered {
  padding-left: var(--left-spacing);
  padding-right: var(--right-spacing);
}

/*# sourceMappingURL=bundle.css.map */
