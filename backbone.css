.backbone {
    --gap: 1rem;
    --content: calc(100% - var(--gap) * 2);
    --popout: 0;
    --breakout: 0;
    --full: var(--gap);
}

@media (min-width: 768px) {
    .backbone {
        --gap: clamp(1rem, 6vw, 5rem);
        --content: min(clamp(50rem, 75vw, 80rem), 100% - var(--gap) * 2);
        --popout: minmax(1rem, 100%);
        --breakout: minmax(1rem, 100%);
        --full: var(--gap);
    }
}

.backbone {
    display: grid;
    grid-template-columns:
    [full-start]
    var(--full)
    [breakout-start]
    var(--breakout)
    [popout-start]
    var(--popout)
    [content-start]
    var(--content)
    [content-end]
    var(--popout)
    [popout-end]
    var(--breakout)
    [breakout-end]
    var(--full)
    [full-end];
}

.backbone > :not(.backbone-start-content, .backbone-end-content, .backbone-popout, .backbone-start-popout, .backbone-end-popout, .backbone-breakout, .backbone-start-breakout, .backbone-end-breakout, .backbone-full, .backbone-start-full, .backbone-end-full) {
    grid-column: content;
}

.backbone > .backbone-start-content {
    grid-column-start: content;
}

.backbone > .backbone-end-content {
    grid-column-end: content;
}

.backbone > .backbone-popout {
    grid-column: popout;
}

.backbone > .backbone-start-popout {
    grid-column-start: popout;
}

.backbone > .backbone-end-popout {
    grid-column-end: popout;
}

.backbone > .backbone-breakout {
    grid-column: breakout;
}

.backbone > .backbone-start-breakout {
    grid-column-start: breakout;
}

.backbone > .backbone-end-breakout {
    grid-column-end: breakout;
}

.backbone > .backbone-full {
    grid-column: full;
}

.backbone > .backbone-start-full {
    grid-column-start: full;
}

.backbone > .backbone-end-full {
    grid-column-end: full;
}