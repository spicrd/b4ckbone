.backbone {
    --content-max-width: 80rem;
    --full: 1rem;
    --breakout: 0;
    --popout: 0;
}

@media (min-width: 768px) {
    .backbone {
        --breakout: max(1rem, 6vw);
        --full: clamp(1rem, 6vw, 5rem);
    }
}

@media (min-width: 1024px) {
    .backbone {
        --popout: max(1rem, 6vw);
    }
}

.backbone {
    display: grid;
    grid-template-columns: 
    [full-start] var(--full)
    [breakout-start] var(--breakout)
    [popout-start] var(--popout)
    [content-start] 1fr [content-end]
    var(--popout) [popout-end]
    var(--breakout) [breakout-end]
    var(--full) [full-end];
}

.backbone > :not(.backbone-start-content, .backbone-end-content, .backbone-popout, .backbone-start-popout, .backbone-end-popout, .backbone-breakout, .backbone-start-breakout, .backbone-end-breakout, .backbone-full, .backbone-start-full, .backbone-end-full) {
    grid-column: content;
    justify-self: center;
    width: 100%;
    max-width: var(--content-max-width);
}

.backbone > .backbone-start-content {
    grid-column-start: content;
}

.backbone > .backbone-end-content {
    grid-column-end: content;
}

.backbone > .backbone-popout {
    grid-column: popout;
}

.backbone > .backbone-start-popout {
    grid-column-start: popout;
}

.backbone > .backbone-end-popout {
    grid-column-end: popout;
}

.backbone > .backbone-breakout {
    grid-column: breakout;
}

.backbone > .backbone-start-breakout {
    grid-column-start: breakout;
}

.backbone > .backbone-end-breakout {
    grid-column-end: breakout;
}

.backbone > .backbone-full {
    grid-column: full;
}

.backbone > .backbone-start-full {
    grid-column-start: full;
}

.backbone > .backbone-end-full {
    grid-column-end: full;
}